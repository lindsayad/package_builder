#!/bin/bash
#############
## Specifics
##
DEP=(modules gcc mpich-gcc)
PACKAGE="<VALGRIND>"
NO_CCACHE='true'

#####
# Set the operating system allowed to build this module
#
ARCH=(Darwin)

#####
# Setting any of these variables to 'false' effectively skips that step
# This is useful for items like 'autojump' which requires a git clone/checkout
DOWNLOAD='http://mooseframework.inl.gov/source_packages/<VALGRIND>.tar.gz'
EXTRACT='<VALGRIND>.tar.gz'
CONFIGURE='false'
BUILD='true'
INSTALL='true'

pre_run() {
    if [ `uname` = "Darwin" ] && [ `uname -r | grep -c ^17.` -ge 1 ]; then
        echo "$PACKAGE not supported on High Sierra..."
        cleanup 0
    fi
    cat << 'EOF' > darwin.patch
diff -ruN a/coregrind/m_syscall.c b/coregrind/m_syscall.c
--- a/coregrind/m_syscall.c	2016-10-21 04:37:39.000000000 -0600
+++ b/coregrind/m_syscall.c	2016-10-31 10:02:39.000000000 -0600
@@ -33,6 +33,7 @@
 #include "pub_core_vki.h"
 #include "pub_core_vkiscnums.h"
 #include "pub_core_syscall.h"
+#define __private_extern__ extern

 /* ---------------------------------------------------------------------
    Building syscall return values.
diff -ruN a/coregrind/m_syswrap/syswrap-darwin.c b/coregrind/m_syswrap/syswrap-darwin.c
--- a/coregrind/m_syswrap/syswrap-darwin.c	2016-10-21 04:37:40.000000000 -0600
+++ b/coregrind/m_syswrap/syswrap-darwin.c	2016-10-31 10:03:10.000000000 -0600
@@ -72,6 +72,8 @@
 #define msgh_request_port      msgh_remote_port
 #define msgh_reply_port        msgh_local_port
 #define BOOTSTRAP_MAX_NAME_LEN                  128
+#define __private_extern__ extern
+
 typedef HChar name_t[BOOTSTRAP_MAX_NAME_LEN];

 typedef uint64_t mig_addr_t;
diff -ruN a/coregrind/vg_preloaded.c b/coregrind/vg_preloaded.c
--- a/coregrind/vg_preloaded.c	2016-10-21 04:37:40.000000000 -0600
+++ b/coregrind/vg_preloaded.c	2016-10-31 10:43:38.000000000 -0600
@@ -46,6 +46,7 @@
 #include "pub_core_clreq.h"
 #include "pub_core_debuginfo.h"  // Needed for pub_core_redir.h
 #include "pub_core_redir.h"      // For VG_NOTIFY_ON_LOAD
+#define __private_extern__ extern

 #if defined(VGO_linux) || defined(VGO_solaris)
EOF
    patch -p1 < darwin.patch
    unset MODULEPATH
    source $PACKAGES_DIR/Modules/<MODULES>/init/bash
    module load advanced_modules autotools moose/.<MPICH>_<GCC>
    CONFIGURE='./configure --prefix=$PACKAGES_DIR/<VALGRIND> --disable-dependency-tracking --enable-only64bit --build=amd64-darwin'
}
post_run() {
    cat <<EOF > $PACKAGES_DIR/Modules/<MODULES>/adv_modules/valgrind
#%Module1.0#####################################################################
##
## <VALGRIND> modulefile
##
##
##
set          BASE_PATH          "$PACKAGES_DIR"

prepend-path     PATH      "\$BASE_PATH/<VALGRIND>/bin"
setenv		 VALGRIND_DIR "\$BASE_PATH/<VALGRIND>"
EOF
}

##
## End Specifics
##############
## The following script contains all the common functions.
## Those functions are executed in the following order:

# download
# extract
# pre-run
# configure
# make
# make install
# post_run
# cleanup

## pre_run and post_run are the only true specifics that are different
## with every package
PACKAGES_DIR="<PACKAGES_DIR>"
RELATIVE_DIR="<RELATIVE_DIR>"
DOWNLOAD_DIR="<DOWNLOAD_DIR>"
TEMP_PREFIX="<TEMP_PREFIX>"
MOOSE_JOBS=<MOOSE_JOBS>
KEEP_FAILED=<KEEP_FAILED>
DOWNLOAD_ONLY=<DOWNLOAD_ONLY>
source "$RELATIVE_DIR/functions" $@
